#
# COPY THIS FILE TO .envs/.local/.django AND REPLACE MISSING INFORMATION BELOW!
#

# General
# ------------------------------------------------------------------------------
USE_DOCKER=yes
DJANGO_SETTINGS_MODULE=config.settings.local
# settings seem to be local implicitly, but let's be explicit here
DJANGO_DEBUG=yes

# Django's cache backend
# ------------------------------------------------------------------------------
DJANGO_DEFAULT_CACHE_BACKEND=django_redis.cache.RedisCache
DJANGO_DEFAULT_CACHE_LOCATION=redis://redis:6379/0
# We also use redis server here like in production

# Celery
# ------------------------------------------------------------------------------
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/1

# CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
# without quotes!
# CELERY_RESULT_BACKEND=cache+memcached://memcached:11211/
# Note: RabbitMQ and Memcached are running in separate containers having host names 'rabbitmq' and 'memcached'

# Flower
CELERY_FLOWER_USER=xAXMqXVfQBcbOFQyhhRpzwRCIeFswANE
CELERY_FLOWER_PASSWORD=EI7zTd27VUZ2NdqGs5iQxINipsphB6SxUOwxWQXpcJ2OuoeE1JxxTs2bfamSrk8W

# ORCID authentication
# ------------------------------------------------------------------------------
ORCID_CLIENT_ID=<replace with your client ID from ORCID>
ORCID_SECRET=<replace with your secret from ORCID>

# DataCite settings (DOI creation)
# ------------------------------------------------------------------------------
DATACITE_USERNAME=<replace with your DataCite username>
DATACITE_PASSWORD='<replace with your DataCite password>'
# use quotes around the password, otherwise this can create problems on a shell
DATACITE_API_URL=https://api.test.datacite.org
# Test mode: https://api.test.datacite.org
# Production mode: https://api.datacite.org

PUBLICATION_DOI_STATE=draft
# Choose one of 'draft', 'registered', 'findable'
# Please keep in mind that only 'draft' DOIs are deletable.
# For production, use 'findable', if the DOIs should be public.

# PUBLICATION_URL_PREFIX=https://contact.engineering/go/
PUBLICATION_DOI_PREFIX=<replace with your DOI prefix registered at DATACITE>
PUBLICATION_DOI_MANDATORY=False

# Storage settings
# ------------------------------------------------------------------------------
USE_S3_STORAGE=yes

AWS_ACCESS_KEY_ID=admin
AWS_SECRET_ACCESS_KEY=secret12

# the bucket will be created if not available, you can use different buckets for each developer:
AWS_STORAGE_BUCKET_NAME=topobank-dev
# replace with your endpoint url, you can use http://localhost:8082/ if you want to use an SSH tunnel to your endpoint:
# AWS_S3_ENDPOINT_URL=http://minio:9000
AWS_S3_ENDPOINT_URL=http://topobank-minio-alias:9000
# See local.yml why we use this alias! Alternatively, you could define "minio" as hostname for the container's IP
AWS_S3_USE_SSL=True # this is default
AWS_S3_VERIFY=False  # currently the certificate is not valid
#AWS_MEDIA_PREFIX=media/

# Backup Settings
# ------------------------------------------------------------------------------
#
# Periodically database dumps will be written to the defined S3 bucket
# with prefix "backup".
#
# For more information about the used docker image: https://hub.docker.com/r/codestation/go-s3-backup/
#
# set 6 (!) cron job-like fields: secs minutes hours day_of_month month day_of_week
# or predefined schedules
# or "none" for single backup once
# for more information see: https://godoc.org/github.com/robfig/cron
DBBACKUP_SCHEDULE=@hourly
#DBBACKUP_SCHEDULE=none
